// server/server.js
import express from 'express';
import mongoose from 'mongoose';
import dotenv from 'dotenv';
import cors from 'cors';
import path from 'path';
import fs from 'fs';
import { fileURLToPath } from 'url';
import authRoutes from './routes/authRoutes.js';

dotenv.config();
const app = express();
const PORT = process.env.PORT || 10000;

// CORS: —Ä–∞–∑—Ä–µ—à–∞–µ–º –∑–∞–ø—Ä–æ—Å—ã —Å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
app.use(cors({
  origin: process.env.NODE_ENV === 'production'
    ? process.env.CLIENT_URL
    : 'http://localhost:3000'
}));

// –ü–∞—Ä—Å–µ—Ä JSON
app.use(express.json());

// –ú–∞—Ä—à—Ä—É—Ç—ã –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
app.use('/api/auth', authRoutes);

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–∑–¥–∞—á–∏ —Å—Ç–∞—Ç–∏–∫–∏ React
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);
const buildPath = path.join(__dirname, '../client/build');
if (fs.existsSync(buildPath)) {
  app.use(express.static(buildPath));
  app.get('*', (req, res) => {
    res.sendFile(path.join(buildPath, 'index.html'));
  });
}

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB –∏ –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
mongoose.connect(process.env.MONGODB_URI)
  .then(() => {
    console.log('‚úÖ MongoDB connected');
    app.listen(PORT, () => console.log(`üöÄ Server running on port ${PORT}`));
  })
  .catch(err => {
    console.error('‚ùå MongoDB connection error:', err);
  });